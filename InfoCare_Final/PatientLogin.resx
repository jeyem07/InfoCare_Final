<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>